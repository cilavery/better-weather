{"version":3,"sources":["app/shared/utils.js","app/components/currentWeather/currentWeather.js","app/containers/currentWeather/currentWeather.js","app/components/fiveDay/fiveDay.js","app/selectors.js","app/containers/fiveDay/fiveDay.js","app/components/locationUpdate/locationUpdate.js","app/constants.js","app/actions.js","app/containers/locationUpdate/locationUpdate.js","app/components/tempUnit/tempUnit.js","app/containers/tempUnit/tempUnit.js","app/shared/components/spinner/spinner.js","app/components/app/app.js","app/containers/app/app.js","app/reducers.js","app/api.js","app/sagas.js","serviceWorker.js","store.js","index.js"],"names":["days","formatUnit","unit","convertTemp","temp","Array","isArray","map","item","tempObj","newTemp","convertToImperial","Number","main","dt","weather","convertToMetric","Math","round","CurrentWeather","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","Date","setState","prevProps","_this$state","today","toDateString","react_default","a","createElement","className","concat","id","Component","connect","current","CurrentWeatherComponent","FiveDay","temps","selectAndSetWeather","newTemps","fiveDays","data","filter","forecast","getDate","dt_txt","getHours","selectFiveDayData","Container_default","Row_default","day","idx","Col_default","lg","key","UTCFormat","getDay","fiveDay","list","FiveDayComponent","LocationUpdate","handleChange","address","handleSelect","_this$props","getGeoLocation","geocodeByAddress","then","results","getLatLng","latLng","lat","lng","catch","error","console","dist_default","value","onChange","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","style","backgroundColor","cursor","description","APP_FETCH_WEATHER","APP_FETCH_FIVE_DAY","appFetchWeatherAction","payload","type","appFetchWeatherSuccessAction","response","appFetchWeatherFailureAction","appFetchFiveDayAction","appFetchFiveDaySuccessAction","appFetchFiveDayFailureAction","appStoreLocationEnabledAction","dispatch","lon","LocationUpdateComponent","TempUnit","e","updateUnit","target","appStoreUpdateUnitAction","TempUnitComponent","spinner_spinner","App","successGeo","position","updateLocationEnabled","coords","latitude","longitude","errorGeo","locationEnabled","navigator","geolocation","getCurrentPosition","_this2","_this$props2","react","Navbar_default","bg","expand","variant","Brand","name","locationUpdate","Tabs_default","activeKey","Tab_default","eventKey","title","isFetching","keys","length","currentWeather","fetchError","fiveDay_fiveDay","sticky","tempUnit","AppComponent","initialState","fetchWeather","fetch","process","ok","json","Error","fetchFiveDay","weatherFetchFlow","weatherFetchFiveDayFlow","watchWeather","watchFiveDay","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_ref2","_context2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","_callee","_context5","all","fork","_marked5","Boolean","window","location","hostname","match","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","arguments","undefined","action","objectSpread","toString","applyMiddleware","run","AppSagas","ReactDOM","render","es","app","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbf8ff7c.chunk.js","sourcesContent":["const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat']\n\nexport const calculateDayOfWeek = (UTCFormat) => {\n  return days[new Date(UTCFormat * 1000).getDay()]\n}\n\nexport const formatUnit = (unit) => {\n  return unit === 'imperial' ? 'ºF' : 'ºC'\n}\n\nexport const convertTemp = (temp, unit) => {\n  let newTempArr\n  if (unit === 'imperial') {\n    if (Array.isArray(temp)) {\n      newTempArr = temp.map(item => {\n        let tempObj = {}\n        let newTemp = {\n          temp: convertToImperial(Number(item.main.temp))\n        }\n        tempObj.dt = item.dt\n        tempObj.weather = item.weather\n        tempObj.main = newTemp\n        return tempObj\n      })\n      return newTempArr\n    } else {\n      return convertToImperial(temp)\n    }\n  } else {\n    if (Array.isArray(temp)) {\n      newTempArr = temp.map(item => {\n        let tempObj = {}\n        let newTemp = {\n          temp: convertToMetric(Number(item.main.temp))\n        }\n        tempObj.dt = item.dt\n        tempObj.weather = item.weather\n        tempObj.main = newTemp\n        return tempObj\n      })\n      return newTempArr\n    } else {\n      return convertToMetric(temp)\n    }\n  }\n}\n\nexport const convertToMetric = (temp) => {\n  return Math.round((5 / 9) * (temp - 32))\n}\n\nexport const convertToImperial = (temp) => {\n  return Math.round((temp * 9 / 5) + 32)\n}","import React, { Component } from 'react'\nimport { formatUnit, convertTemp } from '../../shared/utils'\n\nexport default class CurrentWeather extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      date: new Date(),\n      temp: ''\n    }\n  }\n\n  componentDidMount() {\n    const { main } = this.props.weather\n    this.setState({\n      temp: Math.round(main.temp)\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    let newTemp\n    if (prevProps.unit !== this.props.unit) {\n      newTemp = convertTemp(this.state.temp, this.props.unit)\n      this.setState({\n        temp: newTemp\n      })\n    }\n    if (prevProps.weather.main.temp !== this.props.weather.main.temp) {\n      this.setState({\n        temp: Math.round(this.props.weather.main.temp)\n      })\n    }\n  }\n\n  render() {\n    const { date, temp } = this.state\n    const { weather } = this.props.weather\n    const { unit } = this.props\n    const today = date.toDateString()\n    return (\n      <div className=\"text-center pt-5\">\n        <h4>{today}</h4>\n        <p>{weather[0].main}</p>\n        <i className={`wi wi-owm-${weather[0].id}`}></i>\n        <div className=\"d-flex flex-row justify-content-center align-items-baseline\">\n          <p className=\"pt-5 temp-text\">{temp}</p>\n          <p>{formatUnit(unit)}</p>\n        </div>\n      </div >\n    )\n  }\n}\n\n\n\n","import { connect } from 'react-redux'\nimport { CurrentWeatherComponent } from '../../components/currentWeather'\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.current.weather,\n    unit: state.unit\n  }\n}\nexport default connect(mapStateToProps, null)(CurrentWeatherComponent)","import React, { Component } from 'react'\nimport { selectFiveDayData } from '../../selectors'\nimport { calculateDayOfWeek, formatUnit, convertTemp } from '../../shared/utils'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nexport default class FiveDay extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      temps: []\n    }\n  }\n\n  componentDidMount() {\n    const { weather } = this.props\n    this.selectAndSetWeather(weather)\n  }\n\n  componentDidUpdate(prevProps) {\n    let newTemps\n    const { unit } = this.props\n    if (prevProps.unit !== this.props.unit) {\n      newTemps = convertTemp(this.state.temps, unit)\n      this.setState({\n        temps: newTemps\n      })\n    }\n    if (prevProps.weather !== this.props.weather) {\n      this.selectAndSetWeather(this.props.weather)\n    }\n  }\n\n  selectAndSetWeather(weather) {\n    let today = new Date()\n    const fiveDays = selectFiveDayData(weather, today)\n    this.setState({\n      temps: fiveDays\n    })\n  }\n\n  render() {\n    const { unit } = this.props\n    const { temps } = this.state\n    return (\n      <div className=\"text-center pt-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            {\n              temps.map((day, idx) => {\n                return (\n                  <Col lg={2} key={idx} className=\"border p-4\">\n                    <div className=\"p-2\">{calculateDayOfWeek(day.dt)}</div>\n                    <div className=\"p-2\">{day.weather[0].main}</div>\n                    <i className={`wi wi-owm-${day.weather[0].id} forecast`}></i>\n                    <div className=\"d-flex flex-row justify-content-center align-items-baseline\">\n                      <div className=\"pt-5 forecast-text\">{Math.round(day.main.temp)}</div>\n                      <div>{formatUnit(unit)}</div>\n                    </div>\n                  </Col>\n                )\n              })\n            }\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n","export const selectFiveDayData = (data, today) => {\n  return data.filter(forecast => {\n    return (today.getDate() !== new Date(forecast.dt * 1000).getDate()) && (new Date(forecast.dt_txt).getHours() === 9)\n  })\n}","import { connect } from 'react-redux'\nimport { FiveDayComponent } from '../../components/fiveDay'\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.fiveDay.weather.list,\n    unit: state.unit\n  }\n}\n\nexport default connect(mapStateToProps, null)(FiveDayComponent)","import React, { Component } from 'react'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'reactjs-places-autocomplete'\n\nexport default class LocationUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: ''\n    }\n  }\n\n  handleChange = address => {\n    this.setState({ address })\n  }\n\n  handleSelect = address => {\n    const { getGeoLocation, unit } = this.props\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng =>\n        getGeoLocation(latLng.lat, latLng.lng, unit)\n      )\n      .catch(error => console.error('Error', error))\n  }\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container border\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' }\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    )\n  }\n}","export const APP_FETCH_WEATHER = 'APP/FETCH_WEATHER'\nexport const APP_FETCH_WEATHER_SUCCESS = 'APP/FETCH_WEATHER_SUCCESS'\nexport const APP_FETCH_WEATHER_FAILURE = 'APP/FETCH_WEATHER_FAILURE'\n\nexport const APP_FETCH_FIVE_DAY = 'APP/FETCH_FIVE_DAY'\nexport const APP_FETCH_FIVE_DAY_SUCCESS = 'APP/FETCH_FIVE_DAY_SUCCESS'\nexport const APP_FETCH_FIVE_DAY_FAILURE = 'APP/FETCH_FIVE_DAY_FAILURE'\n\nexport const APP_STORE_UPDATE_UNIT = 'APP/STORE_UPDATE_UNIT'\nexport const APP_STORE_LOCATION_ENABLED = 'APP/STORE_LOCATION_ENABLED'","import {\n  APP_FETCH_WEATHER,\n  APP_FETCH_WEATHER_SUCCESS,\n  APP_FETCH_WEATHER_FAILURE,\n  APP_FETCH_FIVE_DAY,\n  APP_FETCH_FIVE_DAY_SUCCESS,\n  APP_FETCH_FIVE_DAY_FAILURE,\n  APP_STORE_UPDATE_UNIT,\n  APP_STORE_LOCATION_ENABLED\n} from './constants'\n\nexport const appFetchWeatherAction = payload => {\n  return {\n    type: APP_FETCH_WEATHER,\n    payload\n  }\n}\n\nexport const appFetchWeatherSuccessAction = response => {\n  return {\n    type: APP_FETCH_WEATHER_SUCCESS,\n    response\n  }\n}\n\nexport const appFetchWeatherFailureAction = error => {\n  return {\n    type: APP_FETCH_WEATHER_FAILURE,\n    error\n  }\n}\n\nexport const appFetchFiveDayAction = payload => {\n  return {\n    type: APP_FETCH_FIVE_DAY,\n    payload\n  }\n}\n\nexport const appFetchFiveDaySuccessAction = response => {\n  return {\n    type: APP_FETCH_FIVE_DAY_SUCCESS,\n    response\n  }\n}\n\nexport const appFetchFiveDayFailureAction = error => {\n  return {\n    type: APP_FETCH_FIVE_DAY_FAILURE,\n    error\n  }\n}\n\nexport const appStoreUpdateUnitAction = payload => {\n  return {\n    type: APP_STORE_UPDATE_UNIT,\n    payload\n  }\n}\n\nexport const appStoreLocationEnabledAction = payload => {\n  return {\n    type: APP_STORE_LOCATION_ENABLED,\n    payload\n  }\n}","import { connect } from 'react-redux'\nimport { LocationUpdateComponent } from '../../components/locationUpdate'\nimport { appFetchWeatherAction, appFetchFiveDayAction, appStoreLocationEnabledAction } from '../../actions'\n\nexport const getGeoLocation = (lat, lon, unit, dispatch) => {\n  const payload = {\n    unit,\n    lat,\n    lon\n  }\n  dispatch(appFetchWeatherAction(payload))\n  dispatch(appFetchFiveDayAction(payload))\n  dispatch(appStoreLocationEnabledAction(true))\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.current.weather,\n    fiveDay: state.fiveDay.weather,\n    unit: state.unit\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGeoLocation: (lat, lon, unit) => getGeoLocation(lat, lon, unit, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationUpdateComponent)","import React, { Component } from 'react'\n\nexport default class TempUnit extends Component {\n  handleChange = (e) => {\n    this.props.updateUnit(e.target.value)\n  }\n\n  render() {\n    const { unit } = this.props\n    return (\n      <form className=\"text-secondary\">\n        <label className=\"pr-2\">Change Unit:</label>\n        <select value={unit} onChange={this.handleChange}>\n          <option value=\"imperial\">Fahrenheit</option>\n          <option value=\"metric\">Celsius</option>\n        </select>\n      </form>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { TempUnitComponent } from '../../components/tempUnit'\nimport { appStoreUpdateUnitAction } from '../../actions'\n\nexport const updateUnit = (unit, dispatch) => {\n  const payload = {\n    unit\n  }\n  dispatch(appStoreUpdateUnitAction(payload))\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.current.weather,\n    fiveDay: state.fiveDay.weather,\n    unit: state.unit\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUnit: (unit) => updateUnit(unit, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TempUnitComponent)","import React from 'react'\nimport './spinner.css'\n\nexport default () => (\n  <div className=\"spinner\">\n    <div className=\"dot1\"></div>\n    <div className=\"dot2\"></div>\n  </div>\n)\n\n","import React, { Component, Fragment } from 'react'\nimport { CurrentWeatherContainer } from '../../containers/currentWeather'\nimport { FiveDayContainer } from '../../containers/fiveDay'\nimport { LocationUpdateContainer } from '../../containers/locationUpdate'\nimport { TempUnitContainer } from '../../containers/tempUnit'\nimport { Spinner } from '../../shared'\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      locationEnabled: true\n    }\n  }\n  componentDidMount() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(this.successGeo, this.errorGeo)\n    }\n  }\n\n  successGeo = (position) => {\n    const { getGeoLocation, unit, updateLocationEnabled } = this.props\n    let lat = position.coords.latitude\n    let lon = position.coords.longitude\n    getGeoLocation(lat, lon, unit)\n    updateLocationEnabled(true)\n  }\n\n  errorGeo = () => {\n    const { updateLocationEnabled } = this.props\n    updateLocationEnabled(false)\n  }\n\n  render() {\n    const { weather, fiveDay, locationEnabled } = this.props\n    return (\n      <div>\n        {\n          typeof weather !== 'undefined'\n            ?\n            < Fragment >\n              <Container>\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"justify-content-center\">\n                  <Container>\n                    <Navbar.Brand>Location: <em>{weather.name}</em></Navbar.Brand>\n                    <LocationUpdateContainer />\n                  </Container>\n                </Navbar>\n              </Container>\n              <Tabs\n                id=\"controlled-tab-example\"\n                activeKey={this.state.key}\n                onSelect={key => this.setState({ key })}\n                className=\"justify-content-center mt-5\"\n              >\n                <Tab eventKey=\"temp\" title=\"Current Temp\" className=\"pb-3\">\n                  {\n                    !locationEnabled\n                      ? <div className=\"text-center pt-5\">\n                        <Spinner />\n                        <p className=\"message\">Please input a city</p>\n                      </div>\n                      : locationEnabled && (weather.isFetching || Object.keys(weather).length < 1)\n                        ?\n                        <div>\n                          <Spinner />\n                          <p className=\"text-center pt-5\">Fetching Weather...</p>\n                        </div>\n                        : <CurrentWeatherContainer />\n                  }\n                  {\n                    weather.fetchError\n                      ?\n                      <div className=\"text-center pt-5\">\n                        <p className=\"error-text\">There was a problem getting the weather</p>\n                      </div>\n                      : null\n                  }\n                </Tab>\n                <Tab eventKey=\"forecast\" title=\"5-Day Forecast\" className=\"pb-5\">\n                  {\n                    !locationEnabled\n                      ? <div className=\"text-center pt-5\">\n                        <Spinner />\n                        <p className=\"message\">Please input a city</p>\n                      </div>\n                      : locationEnabled && (fiveDay.isFetching || Object.keys(fiveDay).length < 1)\n                        ?\n                        <div>\n                          <Spinner />\n                          <p className=\"text-center pt-5\">Fetching Weather...</p>\n                        </div>\n                        : <FiveDayContainer />\n                  }\n                  {\n                    fiveDay.fetchError\n                      ?\n                      <div className=\"text-center pt-5\">\n                        <p className=\"error-text\">There was a problem getting the five day forecast</p>\n                      </div>\n                      : null\n                  }\n                </Tab>\n              </Tabs>\n              <Container>\n                <Navbar sticky=\"bottom\" expand=\"lg\" variant=\"dark\" bg=\"dark\">\n                  <Container>\n                    <Navbar.Brand>Better Weather App</Navbar.Brand>\n                    <TempUnitContainer />\n                  </Container>\n                </Navbar>\n              </Container>\n            </Fragment >\n            : null\n        }\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { AppComponent } from '../../components/app'\nimport { appFetchWeatherAction, appFetchFiveDayAction, appStoreLocationEnabledAction } from '../../actions'\n\nexport const getGeoLocation = (lat, lon, unit, dispatch) => {\n  const payload = {\n    unit,\n    lat,\n    lon\n  }\n  dispatch(appFetchWeatherAction(payload))\n  dispatch(appFetchFiveDayAction(payload))\n}\n\nexport const updateLocationEnabled = (payload, dispatch) => {\n  dispatch(appStoreLocationEnabledAction(payload))\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.current.weather,\n    fiveDay: state.fiveDay.weather,\n    unit: state.unit,\n    locationEnabled: state.locationEnabled\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGeoLocation: (lat, lon, unit) => getGeoLocation(lat, lon, unit, dispatch),\n    updateLocationEnabled: (payload) => updateLocationEnabled(payload, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppComponent)","import {\n  APP_FETCH_WEATHER,\n  APP_FETCH_WEATHER_SUCCESS,\n  APP_FETCH_WEATHER_FAILURE,\n  APP_FETCH_FIVE_DAY,\n  APP_FETCH_FIVE_DAY_SUCCESS,\n  APP_FETCH_FIVE_DAY_FAILURE,\n  APP_STORE_UPDATE_UNIT,\n  APP_STORE_LOCATION_ENABLED\n} from './constants'\n\nconst initialState = {\n  current: {\n    weather: {},\n    isFetching: false,\n    fetchError: null\n  },\n  fiveDay: {\n    weather: {},\n    isFetching: false,\n    fetchError: null\n  },\n  unit: 'imperial',\n  locationEnabled: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case APP_FETCH_WEATHER:\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          isFetching: true,\n          fetchError: null\n        }\n      }\n    case APP_FETCH_WEATHER_SUCCESS:\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          weather: {\n            ...action.response,\n          },\n          isFetching: false,\n          fetchError: null\n        }\n      }\n    case APP_FETCH_WEATHER_FAILURE:\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          isFetching: false,\n          fetchError: action.error.toString()\n        }\n      }\n    case APP_FETCH_FIVE_DAY:\n      return {\n        ...state,\n        fiveDay: {\n          ...state.fiveDay,\n          isFetching: true,\n          fetchError: null\n        }\n      }\n    case APP_FETCH_FIVE_DAY_SUCCESS:\n      return {\n        ...state,\n        fiveDay: {\n          ...state.fiveDay,\n          weather: {\n            ...action.response,\n          },\n          isFetching: false,\n          fetchError: null\n        }\n      }\n    case APP_FETCH_FIVE_DAY_FAILURE:\n      return {\n        ...state,\n        fiveDay: {\n          ...state.fiveDay,\n          isFetching: false,\n          fetchError: action.error.toString()\n        }\n      }\n    case APP_STORE_UPDATE_UNIT:\n      return {\n        ...state,\n        unit: action.payload.unit\n      }\n    case APP_STORE_LOCATION_ENABLED:\n      return {\n        ...state,\n        locationEnabled: action.payload\n      }\n    default:\n      return state\n  }\n}","\nexport const fetchWeather = (payload) => {\n  const unit = payload.unit\n  const lat = payload.lat\n  const lon = payload.lon\n  return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${unit}&appid=${process.env.REACT_APP_OPEN_WEATHER_KEY}`)\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      }\n      throw new Error('Network response was not ok')\n    })\n}\n\nexport const fetchFiveDay = (payload) => {\n  const unit = payload.unit\n  const lat = payload.lat\n  const lon = payload.lon\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${unit}&appid=${process.env.REACT_APP_OPEN_WEATHER_KEY}`)\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      }\n      throw new Error('Network response was not ok')\n    })\n}","import { put, takeLatest, fork, all, call } from 'redux-saga/effects'\nimport {\n  fetchWeather,\n  fetchFiveDay\n} from './api'\nimport {\n  appFetchWeatherSuccessAction,\n  appFetchWeatherFailureAction,\n  appFetchFiveDaySuccessAction,\n  appFetchFiveDayFailureAction\n} from './actions'\nimport {\n  APP_FETCH_WEATHER,\n  APP_FETCH_FIVE_DAY\n} from './constants'\n\nexport function* weatherFetchFlow({ payload }) {\n  try {\n    const response = yield call(fetchWeather, payload)\n    yield put(appFetchWeatherSuccessAction(response))\n  } catch (error) {\n    yield put(appFetchWeatherFailureAction(error))\n  }\n}\n\nexport function* weatherFetchFiveDayFlow({ payload }) {\n  try {\n    const response = yield call(fetchFiveDay, payload)\n    yield put(appFetchFiveDaySuccessAction(response))\n  } catch (error) {\n    yield put(appFetchFiveDayFailureAction(error))\n  }\n}\n\nexport function* watchWeather() {\n  yield takeLatest(APP_FETCH_WEATHER, weatherFetchFlow)\n}\n\nexport function* watchFiveDay() {\n  yield takeLatest(APP_FETCH_FIVE_DAY, weatherFetchFiveDayFlow)\n}\n\n\nexport default function* () {\n  yield all([\n    fork(watchWeather),\n    fork(watchFiveDay)\n  ])\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  createStore,\n  applyMiddleware,\n  compose\n} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { AppReducer } from './app'\nimport { AppSagas } from './app'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  AppReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(AppSagas)\n\nexport default store","import 'bootstrap/dist/css/bootstrap.css'\nimport './assets/styles/weather-icons.css'\nimport './assets/styles/index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { AppContainer } from './app'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}